name: Continuous Integration (CODAP v2)

on:
  push:
    paths-ignore: # don't run this workflow if it only contains v3 changes
      - 'v3/**'   # https://docs.github.com/en/actions/using-workflows/triggering-a-workflow#example-excluding-paths
      - '.github/workflows/v3.yml'
      - '.github/workflows/build-num-increment.yml'
    tags-ignore:
      - '3.*'
    branches-ignore:
      - 'main'

jobs:
  build_test:
    name: Build and Run Jest Tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v2
      - name: Setup Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: '2.7'
      - name: Install Dependencies
        run: |
          gem install bundler
          bundle install
          npm ci --legacy-peer-deps
      - name: Build
        run: |
          git clone https://github.com/concord-consortium/codap-data.git ../codap-data
          git clone https://github.com/concord-consortium/codap-data-interactives.git ../codap-data-interactives
          cd ../codap-data-interactives/onboarding
          npm install
          cd ../../codap
          npm run build:travis
  #     - name: Run Tests
  #       run: npm run test -- --runInBand
  # cypress:
  #   runs-on: ubuntu-latest
  #   strategy:
  #     # when one test fails, DO NOT cancel the other
  #     # containers, because this will kill Cypress processes
  #     # leaving the Dashboard hanging ...
  #     # https://github.com/cypress-io/github-action/issues/48
  #     fail-fast: false
  #     matrix:
  #       # run 3 copies of the current job in parallel
  #       containers: [1, 2, 3]
  #   steps:
  #     - name: Checkout
  #       uses: actions/checkout@v2
  #     - uses: cypress-io/github-action@v2
  #       with:
  #         install-command: npm ci --legacy-peer-deps
  #         start: npm start
  #         wait-on: 'http://localhost:8080'
  #         # only record the results to dashboard.cypress.io if CYPRESS_RECORD_KEY is set
  #         record: ${{ !!secrets.CYPRESS_RECORD_KEY }}
  #         # only do parallel if we have a record key
  #         parallel: ${{ !!secrets.CYPRESS_RECORD_KEY }}
  #       env:
  #         # pass the Dashboard record key as an environment variable
  #         CYPRESS_RECORD_KEY: ${{ secrets.CYPRESS_RECORD_KEY }}
  #         # pass GitHub token to allow accurately detecting a build vs a re-run build
  #         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  #         # turn on code coverage when running npm start
  #         # so far we've been using a webpack coverage-istanbul-loader for this
  #         # but there has been work on using the code coverage support in the browser directly,
  #         # which should be much faster
  #         CODE_COVERAGE: true
  #         # Also turn on the code coverage tasks in cypress itself, these are disabled
  #         # by default.
  #         CYPRESS_coverage: true
  #     - name: Upload coverage to Codecov
  #       uses: codecov/codecov-action@v1
  #       with:
  #         flags: cypress
  s3-deploy:
    name: S3 Deploy
    needs:
      - build_test
      # - cypress
    runs-on: ubuntu-18.04
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v2
      - name: Setup Ruby
        uses: actions/setup-ruby@v1
        with:
          ruby-version: '2.7'
      - name: Install Dependencies
        run: |
          gem install bundler
          bundle install
          gem install s3_website -v 3.4.0
          npm ci --legacy-peer-deps
      - name: Build
        run: npm run build
      - name: Deploy
        run: ./bin/s3_deploy.sh
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
