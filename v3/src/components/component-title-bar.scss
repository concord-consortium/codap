@use "./vars";

$min-button-width: 24px;
$button-width: 34px;
$title-padding-x: 10px;
$title-margin-x: 10px;
$title-text-min-width: 32px;
$right-buttons: 2 * $button-width;
$left-buttons: 1 * $button-width;
$reserved-inline: $right-buttons + $left-buttons + 2 * ($title-padding-x + $title-margin-x);

.component-title-bar {
  align-items: center;
  background-color: vars.$title-bar-color;
  border-radius: vars.$border-radius-top-corners;
  container-name: titleBar;
  container-type: inline-size;
  flex-direction: row;
  height: vars.$title-bar-height;
  overflow: hidden;
  width: 100%;

  &.focusTile {
    background-color: vars.$title-bar-focus-color;

    .component-title-bar-button {
      &:hover {
        background-color: vars.$title-bar-color;
      }

      &:active {
        background-color: #d3f4ff;
      }
    }
  }

  &:hover, &:active {
    .header-right {
      visibility: visible;

      &.disabled {
        visibility: hidden;
      }
    }
  }

  .header-left, .header-right {
    .component-title-bar-button {
      align-items: center;
      background-color: transparent;
      border-radius: 0;
      display: flex;
      height: vars.$title-bar-height;
      justify-content: center;
      min-width: $min-button-width;
      padding: 0;
      width: $button-width;

      &:hover {
        background-color: #d3f4ff;
      }

      &:active {
        background-color: #eaf9ff;
      }
    }
  }

  .header-left {
    align-items: center;
    border-top-left-radius: 6px;
    display: flex;
    flex-direction: row;
    justify-content: center;
    position: absolute;
  }

  .header-right {
    height: vars.$title-bar-height;
    flex-direction: row;
    align-items: center;
    position: absolute;
    top: 0;
    right: 0;
    cursor: pointer;
    visibility: hidden;
    fill: lightgray;
    border-top-right-radius: 6px;

    .component-minimize-button {
      background-color: transparent;
      border: none;
      padding: 0;
    }

    .component-close-button {
      border-top-right-radius: 4px;
    }
  }
}

.title-bar {
  color: #222;
  cursor: grab;
  font-size: 14px;
  touch-action: none;
  width: 100%;

  .title-text, .title-text-input {
    border-radius: vars.$border-radius-four-corners;
    cursor: text;
    display: block;
    font-weight: 500;
    margin: auto;
    max-width: calc(100% - #{$reserved-inline});
    min-width: $title-text-min-width;
    overflow: hidden;
    padding: 0 $title-padding-x;
    text-align: center;
    white-space: nowrap;
  }

  .title-text {
    border: 1px solid vars.$icon-fill-dark;
    width: fit-content;

    span {
      display: block;
      overflow: hidden;
      text-overflow: ellipsis;
      white-space: nowrap;
      width: 100%;
    }

    &:hover {
      background-color: vars.$title-bar-color;
    }
  }

  .title-text-input {
    outline: 2px solid vars.$focus-outline-color;
    outline-offset: 0;
    width: 100%;
  }

  .title-text-measure {
    height: 0;
    overflow: hidden;
    position: absolute;
    white-space: pre;
  }
}

// Small adjustments to buttons when the title bar gets very narrow.
@container titleBar (max-width: 67px) {
  .header-right {
    .component-title-bar-button {
      width: $min-button-width !important;
    }
    .component-minimize-button {
      border-top-left-radius: 4px !important;
      margin-right: 2px !important;
    }
  }
}

// When the title bar container width forces the title text element to its minimum width, we
// should only display the ellipsis with no other text. Since `text-overflow: ellipsis` will
// not result in the desired effect (it will instead show something like "T..."), we hide the
// text and add the ellipsis character via ::after.
@container titleBar (max-width: #{$reserved-inline + $title-text-min-width}) {
  span {
    position: relative;
    visibility: hidden;
  }
  span::after {
    content: "\2026"; // ellipsis character
    left: 0;
    place-content: center;
    pointer-events: none;
    position: absolute;
    visibility: visible;
  }
}
